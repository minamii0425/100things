generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SUPABASE_SHADOW_DB_URL")
}

model Todos {
  id             Int              @id @unique 
  complete_date  DateTime?
  description    String?           @db.VarChar(512)
  location       String?           @db.VarChar(128)
  status         String?           @db.VarChar(16)
  todo_name      String           @unique @db.VarChar(128)
  Todos_Comments Todos_Comments[]
  Todos_Tags     Todos_Tags[]
}

model Comments {
  id             Int              @id @unique @default(autoincrement())
  comment_author String           @db.VarChar(32)
  comment_text   String           @db.VarChar(4096)
  comment_avatar String           @db.VarChar(1024)
  Todos_Comments Todos_Comments[]
}

model Tags {
  id         Int          @id @unique @default(autoincrement())
  tag_name   String       @unique @db.VarChar(32)
  Todos_Tags Todos_Tags[]
}

model Todos_Comments {
  id         Int     @id @unique @default(autoincrement())
  comment_id Int
  todo_id    Int
  Comments    Comments @relation(fields: [comment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Todos      Todos   @relation(fields: [todo_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Todos_Tags {
  id      Int   @id @unique @default(autoincrement())
  todo_id Int
  tag_id  Int
  Tags    Tags  @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Todos   Todos @relation(fields: [todo_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model profiles {
  id         String    @id @db.Uuid
  updated_at DateTime? @db.Timestamptz(6)
  username   String?   @unique
  full_name  String?
  avatar_url String?
  website    String?
}
